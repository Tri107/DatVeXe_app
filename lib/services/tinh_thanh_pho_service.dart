import 'package:http/http.dart' as http;
import 'dart:convert';
import '../models/TinhThanhPho.dart';
import '../config/api.dart';

class TinhThanhPhoService {
  static const String tinhThanhPho = '/TinhThanhPho';
  /// üîπ L·∫•y danh s√°ch t·∫•t c·∫£ T·ªânh/Th√†nh ph·ªë
  Future<List<TinhThanhPho>> getAll() async {
    try {
      // Gh√©p URL g·ªëc v√† endpoint
      final String baseUrl = Api.client.options.baseUrl;
      final String endpoint = tinhThanhPho.startsWith('/')
          ? tinhThanhPho
          : '/$tinhThanhPho';
      final Uri url = Uri.parse('$baseUrl$endpoint');

      // G·ª≠i request GET
      final response = await http.get(
        url,
        headers: {
          'Content-Type': 'application/json',
          'Authorization': Api.client.options.headers['Authorization'] ?? '',
        },
      );

      // ‚úÖ N·∫øu th√†nh c√¥ng
      if (response.statusCode == 200) {
        final body = jsonDecode(response.body);

        // Ki·ªÉm tra n·∫øu API tr·∫£ v·ªÅ d·∫°ng List ho·∫∑c c√≥ 'data'
        List<dynamic> data;
        if (body is List) {
          data = body;
        } else if (body is Map && body.containsKey('data')) {
          data = body['data'];
        } else {
          throw Exception("Ph·∫£n h·ªìi kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng JSON m·∫£ng.");
        }

        // Chuy·ªÉn JSON sang List<TinhThanhPho>
        final list = data.map((e) => TinhThanhPho.fromJson(e)).toList();

        // L·ªçc b·ªè b·∫£n ghi null ho·∫∑c tr·ªëng t√™n
        final distinctList = list
            .where((e) =>
        e.tinhThanhPhoName.isNotEmpty && e.tinhThanhPhoId > 0)
            .toList();

        return distinctList;
      } else {
        throw Exception(
            'Kh√¥ng th·ªÉ t·∫£i danh s√°ch t·ªânh/th√†nh (M√£ l·ªói: ${response.statusCode})');
      }
    } catch (e) {
      throw Exception('‚ùå L·ªói khi t·∫£i t·ªânh/th√†nh ph·ªë: $e');
    }
  }
}
